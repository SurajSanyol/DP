class Solution {
public:
     
     int solve(vector<int>& nums1, vector<int>& nums2,int i, int p1 , int p2){
          if(i==nums1.size()) return 0;

         int swap=INT_MAX, noSwap = INT_MAX;
         // swap 
         if(p2<nums1[i] && p1 < nums2[i]){
             swap = 1 + solve(nums1, nums2 ,i+1 , nums2[i],nums1[i]);
         }

         // noSwap
          if(p1<nums1[i] && p2<nums2[i]){
             noSwap = solve(nums1, nums2 ,i+1 , nums1[i],nums2[i]);
          }

          return min(swap,noSwap);
     }


     // memoisation 🙏🙏🙏🙏
       int memo(vector<int>& nums1, vector<int>& nums2,int i, int p1 , int p2 , vector<vector<int>>&dp, int isSwap){
          if(i==nums1.size()) return 0;

          if(dp[i][isSwap]!=-1) return dp[i][isSwap];

         int swap=INT_MAX, noSwap = INT_MAX;
         // swap 
         if(p2<nums1[i] && p1 < nums2[i]){
             swap = 1 + memo(nums1, nums2 ,i+1 , nums2[i],nums1[i],dp,1);
         }

         // noSwap
          if(p1<nums1[i] && p2<nums2[i]){
             noSwap = memo(nums1, nums2 ,i+1 , nums1[i],nums2[i],dp , 0);
          }

           dp[i][isSwap]= min(swap,noSwap);

          return dp[i][isSwap];
     }
      
    int minSwap(vector<int>& nums1, vector<int>& nums2) {
        // return solve(nums1,nums2,0,-1,-1);

        vector<vector<int>>dp(nums1.size(),vector<int>(2,-1));
        return memo(nums1,nums2,0,-1,-1,dp,0);

    }
};
